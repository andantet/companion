//file:noinspection all

plugins {
    id "fabric-loom" version "1.4-SNAPSHOT"
    id "org.jetbrains.kotlin.jvm" version "1.9.20"
    id "maven-publish"
}

version = mod_version
group = maven_group

base {
    archivesName = mod_id
}

repositories {
    maven {
        name = "Noxcrew"
        url  = "https://maven.noxcrew.com/public/"
    }

    maven {
        name = "Terraformers"
        url  = "https://maven.terraformersmc.com/releases/"
    }

    maven {
        name = "Jitpack"
        url  = "https://jitpack.io/"
    }

    maven {
        name = "GitHub Packages"
        url  = "https://maven.pkg.github.com/axieum/authme/"
        credentials {
            username = findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
            password = findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
        }
    }

    maven {
        name = "Shedaniel"
        url  = "https://maven.shedaniel.me/"
    }

    maven {
        name = "Wisp Forest"
        url  = "https://maven.wispforest.io/"
    }

    maven {
        name = "Sonatype"
        url  = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:$minecraft_version"
    mappings "net.fabricmc:yarn:$minecraft_version+build.$yarn_build:v2"
    modImplementation "net.fabricmc:fabric-loader:$loader_version"

    modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"
    modImplementation "net.fabricmc:fabric-language-kotlin:$fabric_kotlin_version"

    modImplementation ("com.noxcrew.noxesium:fabric:$noxesium_version") {
        exclude group: "maven.modrinth"
    }

    modImplementation "com.terraformersmc:modmenu:$mod_menu_version"

    modLocalRuntime "me.axieum.mcmod.authme:authme:$authme_version"
    modLocalRuntime "io.wispforest:gadget:$gadget_version"
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "$mod_id" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = 17
    }
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName.get()}"}
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
    }
}
